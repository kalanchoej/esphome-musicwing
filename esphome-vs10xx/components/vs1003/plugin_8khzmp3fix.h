#pragma once

#include "esphome/components/vs10xx_base/vs10xx_plugin.h"

namespace esphome {
namespace vs1003 {

using namespace vs10xx_base;

/// VS1002d and VS1003 support MPEG 2.5 extension, but some stereo files
/// with an 8 kHz sample rate have playback problems. The problems are
/// two-fold.
///
/// First, some old and buggy encoders do not pad the MP3 frames properly,
/// causing more data to be read than is available. This is less of a problem
/// because the decoder is already quite tolerant of broken bitstreams.
///
/// Secondly, there is a bug in the decoding of stereo MP3 files when the
/// sample rate is 8 kHz, window switching flag is 1, and block type is 2.
/// All other combinations work correctly.
///
/// The patch code fixes the second problem.
///
/// File   : mp3patch1003.c
/// IRAM   : 0x030 .. 0x04a
/// Compat : incompatible with the "wavfix" patch
/// 
/// A hardware or software reset de-activates the patch.
///
/// It is recommended that for efficiency reasons the patch is only loaded
/// when the MP3 stream is 8 kHz and stereo (i.e. SCI AUDATA is 8001dec),
/// because all other formats work perfectly, but the patch does not
/// interfere with normal operation even if it is active all the time.
///
/// Note: this plugin was not available in the compressed plugin format,
/// so I had to convert the original patch into this format.
class VS1003Plugin8kHzMp3Fix: public VS10XXPlugin {
  using VS10XXPlugin::VS10XXPlugin;

  const char* tag_() const override { return "vs1003/8khzmp3fix"; }

  const std::vector<uint16_t> plugin_data_() override {
    return {
      0x0007, 0x0001, 0x8030, 0x0006, 0x0001, 0x3e12, 0x0006, 0x0001, 0xb817, 
      0x0006, 0x0001, 0x3e00, 0x0006, 0x0001, 0x3802, 0x0006, 0x0001, 0x0005, 
      0x0006, 0x0001, 0x5097, 0x0006, 0x0001, 0x3009, 0x0006, 0x0001, 0x1c00, 
      0x0006, 0x0001, 0x0000, 0x0006, 0x0001, 0x0202, 0x0006, 0x0001, 0x6024, 
      0x0006, 0x0001, 0x0024, 0x0006, 0x0001, 0x0005, 0x0006, 0x0001, 0x2157, 
      0x0006, 0x0001, 0x2800, 0x0006, 0x0001, 0x1155, 0x0006, 0x0001, 0x4994, 
      0x0006, 0x0001, 0x9c00, 0x0006, 0x0001, 0x4024, 0x0006, 0x0001, 0x0024, 
      0x0006, 0x0001, 0x0005, 0x0006, 0x0001, 0x2497, 0x0006, 0x0001, 0x2800, 
      0x0006, 0x0001, 0x0f95, 0x0006, 0x0001, 0x0000, 0x0006, 0x0001, 0x0902, 
      0x0006, 0x0001, 0x3009, 0x0006, 0x0001, 0x3c02, 0x0006, 0x0001, 0x0005, 
      0x0006, 0x0001, 0x2e57, 0x0006, 0x0001, 0x4994, 0x0006, 0x0001, 0x9c00, 
      0x0006, 0x0001, 0x4024, 0x0006, 0x0001, 0x0024, 0x0006, 0x0001, 0x0005, 
      0x0006, 0x0001, 0x3197, 0x0006, 0x0001, 0x2800, 0x0006, 0x0001, 0x1155, 
      0x0006, 0x0001, 0x0000, 0x0006, 0x0001, 0x0902, 0x0006, 0x0001, 0x3009, 
      0x0006, 0x0001, 0x3c02, 0x0006, 0x0001, 0x36f0, 0x0006, 0x0001, 0x1802, 
      0x0006, 0x0001, 0x3602, 0x0006, 0x0001, 0x8024, 0x0006, 0x0001, 0x0030, 
      0x0006, 0x0001, 0x0717, 0x0006, 0x0001, 0x2100, 0x0006, 0x0001, 0x0000, 
      0x0006, 0x0001, 0x3f05, 0x0006, 0x0001, 0xdbd7, 0x0007, 0x0001, 0x8026, 
      0x0006, 0x0001, 0x2a00, 0x0006, 0x0001, 0x0c0e, 0x0007, 0x0001, 0xc034, 
      0x0006, 0x0001, 0x0800, 0x0006, 0x0001, 0x0000, 0x0007, 0x0001, 0xc031, 
      0x0006, 0x0001, 0x0001, 0x0007, 0x0001, 0xc01a, 0x0006, 0x0001, 0x0047
    };
  }
};

}  // namespace vs1003
}  // namespace esphome

